

class Solution {
public:
   
    struct eleCount{

       int ele;
       int count;
    };
    vector<int> majorityElement(vector<int>& nums) {
        
        int n=nums.size();
        int k=3;
        struct eleCount temp[k-1];
        
        for(int i=0;i<k-1;i++)
        {
            temp[i].count=0;
        }

        for(int i=0;i<n;i++)
        {

            int j=0;
            for(j=0;j<k-1;j++)
            {
                if(temp[j].ele==nums[i])
                {
                    //cout<<"exists"<<nums[i];
                    temp[j].count++;
                    break;
                }
            }
            if(j==k-1)
            {
                j=0;
                for(j=0;j<k-1;j++)
                {
                    if(temp[j].count==0)
                    {
                        temp[j].ele=nums[i];
                        temp[j].count=1;
                       // cout<<"adding new"<<nums[i];
                        break;
                    }
                }

                if(j==k-1)
                {
                    for(j=0;j<k-1;j++)
                    {
                        temp[j].count-=1;
                    }
                }
            }
        }

      
        unordered_set<int> res;
        for(int i=0;i<k-1;i++)
        {
            int cand_count=0;
            for(int j=0;j<n;j++)
            {
                if(nums[j]==temp[i].ele)
                {
                    cand_count++;
                }
            }
            if(cand_count > n/k)
            res.insert(temp[i].ele);
        }

        vector<int> ans(res.begin(),res.end());
        return ans;

    }
};



class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
        int votes=0,candidate=-1;
        for(int i=0;i<nums.size();i++)
        {

            if(votes==0)
            {
                candidate=nums[i];
                votes=1;
            }
            else
            {
                if(nums[i]!=candidate)
                {
                    votes--;
                }
                else
                votes++;
            }
        }

        return candidate;
    }
};