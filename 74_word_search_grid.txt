class Solution {
public:

    bool solve(vector<vector<char>>& board, int i, int j, string word, int index, int word_size,int row_max,int col_max)
    {
        if(index==word.size())
        return true;
        if(i<0 || j<0 || i>=row_max || j>=col_max || word[index]!=board[i][j])
        {
            return false;
        }
       
        char temp=board[i][j];
        board[i][j]='$';

           bool flag= solve(board,i+1,j,word,index+1,word_size,row_max,col_max) ||
                  solve(board,i,j+1,word,index+1,word_size,row_max,col_max) ||
                  solve(board,i-1,j,word,index+1,word_size,row_max,col_max) ||
                  solve(board,i,j-1,word,index+1,word_size,row_max,col_max);

       board[i][j]=temp;

       return flag;

    }

    bool exist(vector<vector<char>>& board, string word) {
        
        int n=board.size();
        int m=board[0].size();

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(solve(board,i,j , word, 0, word.size(),n,m))
                return true;
            }
        }
        return false;
    }
};